{"ast":null,"code":"var _jsxFileName = \"D:\\\\git_demo\\\\mall-demo\\\\shopping_mall\\\\src\\\\pages\\\\commodity\\\\Varieties.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { Space, Table, Tag, Button, Card } from 'antd';\nimport './varieties.css';\nimport { findCategroy } from '../../api/Commodity';\nimport AddVarieties from '../../component/AddVarieties';\nimport { useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Varieties() {\n  _s();\n  // 表头数组\n  const [columns, setcolumns] = useState([{\n    title: '类型名字',\n    dataIndex: 'name',\n    key: 'name'\n  }, {\n    title: '类别',\n    dataIndex: 'type',\n    key: 'type',\n    render: (name, record) => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Tag, {\n        color: name == '二级分类' ? 'orange' : 'purple',\n        children: name.toUpperCase()\n      }, name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 25\n      }, this)\n    }, void 0, false)\n  }, {\n    title: '操作',\n    key: 'action',\n    render: (_, record) => {\n      return /*#__PURE__*/_jsxDEV(Space, {\n        size: \"middle\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"green\",\n          children: \"\\u5220\\u9664\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"green\",\n          children: \"\\u4FEE\\u6539\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this), record.parentId == '0' ? /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          onClick: () => ref.current.showModal('二级分类', record._id),\n          children: \"\\u65B0\\u589E\\u4E8C\\u7EA7\\u5206\\u7C7B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 29\n        }, this) : '']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this);\n    }\n  }]);\n  // 存储商品类型数据\n  const [data, setdata] = useState([]);\n  // 获取ref\n  const ref = useRef();\n  useEffect(() => {\n    getTypeList();\n  }, []);\n  // 获取商品类别数据\n  const getTypeList = id => {\n    findCategroy({\n      parentId: id ? id : 0\n    }).then(res => {\n      if (res.code == 1) {\n        setdata([...res.data.data]);\n      }\n    });\n  };\n  const tableData = useMemo(() => {\n    return data.map(item => {\n      if (!item.children) {\n        return {\n          ...item,\n          children: []\n        };\n      }\n      return item;\n    });\n  }, [data]);\n  const onExpand = (expanded, record) => {\n    // console.log(expanded, record);\n    if (expanded) {\n      findCategroy({\n        parentId: record._id\n      }).then(res => {\n        setdata(data.map(item => {\n          if (item._id === record._id) {\n            return {\n              ...item,\n              children: res.data.data\n            };\n          }\n          return item;\n        }));\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      title: \"\\u5546\\u54C1\\u7C7B\\u578B\",\n      extra: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: () => ref.current.showModal('一级分类', ''),\n        children: \"\\u65B0\\u589E\\u4E00\\u7EA7\\u5206\\u7C7B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 39\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        columns: columns,\n        dataSource: tableData,\n        pagination: false,\n        onExpand: onExpand,\n        rowKey: \"_id\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AddVarieties, {\n      ref: ref,\n      getTypeList: getTypeList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n}\n_s(Varieties, \"OEDqBx9vw7Nyk6uJIyqkQhF4ULw=\");\n_c = Varieties;\nvar _c;\n$RefreshReg$(_c, \"Varieties\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","Space","Table","Tag","Button","Card","findCategroy","AddVarieties","useRef","Varieties","columns","setcolumns","title","dataIndex","key","render","name","record","toUpperCase","_","parentId","ref","current","showModal","_id","data","setdata","getTypeList","id","then","res","code","tableData","map","item","children","onExpand","expanded"],"sources":["D:/git_demo/mall-demo/shopping_mall/src/pages/commodity/Varieties.jsx"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react'\r\nimport { Space, Table, Tag, Button, Card } from 'antd';\r\nimport './varieties.css'\r\nimport { findCategroy } from '../../api/Commodity'\r\nimport AddVarieties from '../../component/AddVarieties';\r\nimport { useRef } from 'react';\r\nexport default function Varieties() {\r\n    // 表头数组\r\n    const [columns, setcolumns] = useState([\r\n        {\r\n            title: '类型名字',\r\n            dataIndex: 'name',\r\n            key: 'name',\r\n        },\r\n        {\r\n            title: '类别',\r\n            dataIndex: 'type',\r\n            key: 'type',\r\n            render: (name, record) => (\r\n                <>\r\n                    {\r\n                        <Tag color={name == '二级分类' ? 'orange' : 'purple'} key={name}>\r\n                            {name.toUpperCase()}\r\n                        </Tag>\r\n                    }\r\n                </>\r\n            ),\r\n        },\r\n        {\r\n            title: '操作',\r\n            key: 'action',\r\n            render: (_, record) => {\r\n                return (\r\n                    <Space size=\"middle\">\r\n                        <span className='green'>删除</span>\r\n                        <span className='green'>修改</span>\r\n                        {record.parentId == '0' ?\r\n                            <Button type='primary'\r\n                                onClick={() => ref.current.showModal('二级分类',record._id)}>新增二级分类</Button> : ''}\r\n                    </Space>\r\n                )\r\n            },\r\n        },\r\n    ])\r\n    // 存储商品类型数据\r\n    const [data, setdata] = useState([])\r\n    // 获取ref\r\n    const ref = useRef()\r\n    useEffect(() => {\r\n        getTypeList()\r\n    }, [])\r\n    // 获取商品类别数据\r\n    const getTypeList = (id) => {\r\n        findCategroy({ parentId: id ? id : 0 }).then(res => {\r\n            if (res.code == 1) {\r\n                setdata([...res.data.data])\r\n            }\r\n        })\r\n    }\r\n    const tableData = useMemo(() => {\r\n        return data.map(item => {\r\n            if (!item.children) {\r\n                return {\r\n                    ...item,\r\n                    children: []\r\n                }\r\n            }\r\n            return item\r\n        })\r\n    }, [data])\r\n    const onExpand = (expanded, record) => {\r\n        // console.log(expanded, record);\r\n        if (expanded) {\r\n            findCategroy({ parentId: record._id }).then(res => {\r\n                setdata(data.map(item => {\r\n                    if (item._id === record._id) {\r\n                        return {\r\n                            ...item,\r\n                            children: res.data.data\r\n                        }\r\n                    }\r\n                    return item\r\n                }))\r\n            })\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <Card title=\"商品类型\" extra={<Button type='primary'\r\n                onClick={() => ref.current.showModal('一级分类','')}>新增一级分类</Button>}>\r\n                <Table\r\n                    columns={columns}\r\n                    dataSource={tableData}\r\n                    pagination={false}\r\n                    onExpand={onExpand}\r\n                    rowKey='_id' />\r\n            </Card>\r\n            <AddVarieties\r\n                ref={ref}\r\n                getTypeList={getTypeList}\r\n            ></AddVarieties>\r\n        </div>\r\n    )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}